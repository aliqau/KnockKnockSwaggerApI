/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object DevelopersApi {

  /**
   * Returns the nth number in the fibonacci sequence. 
   * 
   * Expected answers:
   *   code 200 : Long (OK)
   *   code 400 :  (bad input parameter)
   * 
   * @param &#x60;n&#x60; The index (n) of the fibonacci sequence
   */
  def getFibonacci(&#x60;n&#x60;: Long): ApiRequest[Long] =
    ApiRequest[Long](ApiMethods.GET, "https://virtserver.swaggerhub.com/AliTests07/TestApi20/Test", "/Fibonacci", "application/json")
      .withQueryParam("n", `n`)
      .withSuccessResponse[Long](200)
      .withErrorResponse[Unit](400)
        /**
   * Your token.
   * 
   * Expected answers:
   *   code 200 : String (OK)
   */
  def getToken(): ApiRequest[String] =
    ApiRequest[String](ApiMethods.GET, "https://virtserver.swaggerhub.com/AliTests07/TestApi20/Test", "/Token", "application/json")
      .withSuccessResponse[String](200)
        /**
   * Returns the type of triange given the lengths of its sides
   * 
   * Expected answers:
   *   code 200 : String (OK)
   * 
   * @param &#x60;a&#x60; The length of side a
   * @param &#x60;b&#x60; The length of side b
   * @param &#x60;c&#x60; The length of side c
   */
  def getTriangleType(&#x60;a&#x60;: Option[Int] = None, &#x60;b&#x60;: Option[Int] = None, &#x60;c&#x60;: Option[Int] = None): ApiRequest[String] =
    ApiRequest[String](ApiMethods.GET, "https://virtserver.swaggerhub.com/AliTests07/TestApi20/Test", "/TriangleType", "application/json")
      .withQueryParam("a", `a`)
      .withQueryParam("b", `b`)
      .withQueryParam("c", `c`)
      .withSuccessResponse[String](200)
        /**
   * Reverses the letters of each word in a sentence.
   * 
   * Expected answers:
   *   code 200 : String (OK)
   *   code 400 :  (bad input parameter)
   * 
   * @param sentence Sentence to reverse
   */
  def reverseLetters(sentence: Option[String] = None): ApiRequest[String] =
    ApiRequest[String](ApiMethods.GET, "https://virtserver.swaggerhub.com/AliTests07/TestApi20/Test", "/ReverseWords", "application/json")
      .withQueryParam("sentence", sentence)
      .withSuccessResponse[String](200)
      .withErrorResponse[Unit](400)
      

}

